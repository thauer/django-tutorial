---
# file: roles/webserver/tasks/main.yml
#
# Installs nginx with reverse proxy of '/' to {{ appserver }}
# /static is served from {{ staticpath }}
# Syncs localhost:{{ static_dir }} to {{ staticpath }}
# 

- name: Patches settings.py to define the local static directory
  sudo: false
  local_action: lineinfile dest="{{ local.project_dir }}/mysite/mysite/settings.py"
    regexp='^STATIC_ROOT'
    line="STATIC_ROOT = '{{ local.static_dir }}'"

- name: Collects the static files locally from the django application
  sudo: false
  local_action: django_manage command=collectstatic
    app_path="{{ local.project_dir }}/mysite" virtualenv="{{ local.virtualenv }}"

- name: Creates webapps group
  group: name={{ webapp_group }} system=yes

- name: Creates webapps user
  user: name={{ webapp_user }} group={{ webapp_group }} system=yes
    shell=/bin/bash home={{ webapp_home }}

- name: Pushes the ssh public key
  authorized_key: user="{{ webapp_user }}"
    key="{{ lookup('file', 'authorized_keys') }}"

- name: Creates the static directory
  sudo_user: "{{ webapp_user }}"
  file: path="{{ staticpath }}" state=directory

- name: Copies the content of the static directory
  sudo: false
  remote_user: "{{ webapp_user }}"
  synchronize: src="{{ local.static_dir }}/" dest="{{ staticpath }}"

- name: Ensures nginx is installed
  apt: name=nginx

- name: Ensures sure nginx is running
  service: name=nginx state=started

- name: Disables the default host
  file: path=/etc/nginx/sites-enabled/default state=absent
  register: ngconf1

- name: Copies the host configuration 'mysite'
  template: src=mysite dest=/etc/nginx/sites-available/
  register: ngconf2

- name: Enables the virtual host 'mysite'
  file: path=/etc/nginx/sites-enabled/mysite state=link 
    src=../sites-available/mysite
  register: ngconf3

- name: Restarts ngingx
  service: name=nginx state=restarted
  when: ngconf1.changed or ngconf2.changed or ngconf3.changed
