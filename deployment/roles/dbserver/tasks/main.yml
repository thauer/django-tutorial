---
# file: roles/dbserver/tasks/main.yml
#
# Installs {{ database.version }} connectable from {{ database.intranet }}
# Creates {{ database.name }} with {{ database.user }} and {{ database.password }}
#
# To drop and recreate the db: -e "dropdb=True"

- name: Ensure postgresql is installed
  apt: name={{item}}
  with_items: 
    - postgresql-{{ database.version }}
    - python-psycopg2

- name: Make sure postgresql is running
  service: name="postgresql" state="started"

- name: Set postgresql to listen on 0.0.0.0/0
  sudo_user: postgres
  lineinfile: dest=/etc/postgresql/{{ database.version }}/main/postgresql.conf
    regexp='^listen_addresses = ' line="listen_addresses = '*'"
  register: pgconf1

- name: Allow access from the intranet
  sudo_user: postgres
  lineinfile: dest=/etc/postgresql/{{ database.version }}/main/pg_hba.conf
    line="host all all {{ database.intranet }} md5" insertafter="EOF"
  register: pgconf2

- name: Restart
  service: name="postgresql" state="restarted"
  when: pgconf1.changed or pgconf2.changed

# $ sudo -u postgres createuser -D -A -P {{ database.user }}
# $ sudo -u postgres createdb -O {{ database.user }} {{ database.name }}

- name: Create database user
  sudo_user: postgres
  postgresql_user: name={{ database.user }} password={{ database.password }}
    role_attr_flags=NOSUPERUSER,NOCREATEDB,NOCREATEROLE

- name: Drop database
  sudo_user: postgres
  postgresql_db: name={{ database.name }} state=absent
  when: "{{dropdb|default(False)}}"

- name: Create database
  sudo_user: postgres
  postgresql_db: name={{ database.name }} owner={{ database.user }}
