---
# file: roles/appserver/tasks/main.yml
#
# Creates {{ project_home }} owned by {{ webapp_group }}:{{ webapp_user }}
# Installs in it virtualenv, django, gunicorn. Also installs supervisor
# Syncs project mysite, hooks up gunicorn and supervisor with settings_production.py

- name: Installs supervisor, virtualenv and python-dev, libpq-dev as required by pip
  apt: name={{ item }}
  with_items: 
    - python-virtualenv
    - python-dev
    - libpq-dev

- name: Create webapps group
  group: name={{ webapp.group }} system=yes

- name: Create webapps user
  user: name={{ webapp.user }} group={{ webapp.group }} system=yes
    shell=/bin/bash home={{ webapp.home }}

- name: Add the ssh key
  authorized_key: user={{ webapp.user }} key="{{ lookup('file', 'authorized_keys') }}"

- name: Create the webapp project root directory
  sudo_user: "{{ webapp.user }}"
  file: path={{ webapp.virtualenv }} state=directory

- name: Create the virtualenv
  sudo_user: "{{ webapp_user }}"
  command: virtualenv {{ webapp.virtualenv }} 
    creates={{ webapp.virtualenv }}/bin/activate

- name: Install django and psycopg2
  sudo_user: "{{ webapp.user }}"
  pip: virtualenv={{ webapp.virtualenv }} name={{item}}
  with_items:
    - django 
    - psycopg2

# - name: Creates the mysite directory (this is to fool rsync)
#   sudo: false
#   remote_user: "{{ webapp.user }}"
#   synchronize: src=../django-tutorial/mysite dest={{ webapp.root }}/mysite recursive=no 
#   changed_when: false

- name: Copies the django project
  sudo: false
  remote_user: "{{ webapp.user }}"
  synchronize: src=../django-tutorial dest={{ webapp.home }}/ 
  # checksum=yes times=no

- name: Copies the production settings
  sudo_user: "{{ webapp.user }}"
  template: src=settings_production.py dest={{ webapp.root }}/mysite

- name: django migrate database
  sudo_user: "{{ webapp.user }}"
  environment:
    DJANGO_SETTINGS_MODULE: mysite.settings_production
  django_manage: command=migrate app_path={{ webapp.rooot }}
    virtualenv={{ webapp.virtualenv }}

- name: Copies the database fixture json file
  template: src=dbbootstrap.json dest=/tmp

- name: Applies the initial fixture to the database
  sudo_user: "{{ webapp.user }}"
  environment:
    DJANGO_SETTINGS_MODULE: mysite.settings_production
  django_manage: command="loaddata /tmp/dbbootstrap.json" app_path={{ webapp.root }}
    virtualenv={{ webapp.virtualenv }}

- include: "gunicorn.yml"
