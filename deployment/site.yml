---
# file: site.yml
# Master playbook

# Gather facts first:
- hosts: all

- hosts: allinone
  sudo: yes
  tasks: 
  - name: Update APT package cache
    apt: update_cache=yes cache_valid_time=3600

  - name: Upgrade packages
    apt: upgrade=dist

  - name: Ensure postgresql is installed
    apt: name={{item}}
    with_items: 
      - postgresql
      - postgresql-contrib
      - python-psycopg2
      - python-dev
      - libpq-dev

# $ sudo -u postgres createuser -D -A -P mydatabaseuser
# $ sudo -u postgres createdb -O mydatabaseuser mydatabase

  - name: Create user
    sudo_user: postgres
    postgresql_user: name=mydatabaseuser password=mypassword role_attr_flags=NOSUPERUSER,NOCREATEDB,NOCREATEROLE

  - name: Create database
    sudo_user: postgres
    postgresql_db: name=mydatabase owner=mydatabaseuser

  - name: Create the www root directory
    file: path=/var/www/django-tutorial state=directory
      owner=www-data group=www-data

  - name: Install virtualenv
    apt: name=python-virtualenv

  - name: Create the virtualenv
    command: virtualenv /var/www/django-tutorial --no-site-packages
      creates=/var/www/django-tutorial/bin/activate

  - name: Install django, psycopg2 and gunicorn
    pip: virtualenv=/var/www/django-tutorial name={{item}}
    with_items:
      - django 
      - psycopg2
      - gunicorn

  - name: Copy the django project
    copy: src=../mysite dest=/var/www/django-tutorial/
      owner=www-data group=www-data

  - copy: src=files/gunicorn_start.sh dest=/var/www/django-tutorial/bin/ mode=0755


#   - name: Copy the wsgi example
#     copy: src=../wsgi_example dest="/var/www/" owner=www-data group=www-data 

#   - name: Copy the config
#     copy: src=files/wsgi_example.conf dest="/etc/gunicorn.d/"

#   - name: Copy the config
#     copy: src=files/mysite.conf dest="/etc/gunicorn.d/"

#   - name: Restart gunicorn service
#     service: name=gunicorn state=restarted
#     changed_when: False

#   - name: Install nginx
#     apt: name=nginx

#   - name: Disable default host
#     file: path=/etc/nginx/sites-enabled/default state=absent

#   - name: Copy the host configuration mysite
#     copy: src=files/mysite dest=/etc/nginx/sites-available/

#   - name: enable host mysite
#     file: path=/etc/nginx/sites-enabled/mysite state=link src=../sites-available/mysite

#   - name: django sync
#     django_manage: command=syncdb app_path=/var/www/mysite

#   - name: Install gunicorn
#     apt: name=gunicorn

